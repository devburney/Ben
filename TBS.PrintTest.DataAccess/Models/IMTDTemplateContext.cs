// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace TBS.PrintTest.DataAccess.Models
{
    public partial class IMTDTemplateContext : DbContext
    {
        public IMTDTemplateContext()
        {
        }

        public IMTDTemplateContext(DbContextOptions<IMTDTemplateContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<EmployeeTermType> EmployeeTermType { get; set; }
        public virtual DbSet<Province> Province { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Employee>(entity =>
            {
                entity.Property(e => e.EmployeeId).HasColumnName("Employee_Id");

                entity.Property(e => e.EmployeeActiveBoolean)
                    .IsRequired()
                    .HasColumnName("Employee_Active_Boolean")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.EmployeeFirstName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Employee_First_Name");

                entity.Property(e => e.EmployeeJobDescription)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("Employee_Job_Description");

                entity.Property(e => e.EmployeeLastName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Employee_Last_Name");

                entity.Property(e => e.EmployeeProvinceId).HasColumnName("Employee_Province_Id");

                entity.Property(e => e.EmployeeStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Employee_Start_Date");

                entity.Property(e => e.EmployeeTermTypeId).HasColumnName("Employee_Term_Type_Id");

                entity.HasOne(d => d.EmployeeProvince)
                    .WithMany(p => p.Employee)
                    .HasForeignKey(d => d.EmployeeProvinceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("Province_Employee_fk");

                entity.HasOne(d => d.EmployeeTermType)
                    .WithMany(p => p.Employee)
                    .HasForeignKey(d => d.EmployeeTermTypeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("Employee_Term_Employee_fk");
            });

            modelBuilder.Entity<EmployeeTermType>(entity =>
            {
                entity.ToTable("Employee_Term_Type");

                entity.HasIndex(e => e.EmployeeTermTypeCode, "Employee_Type")
                    .IsUnique();

                entity.Property(e => e.EmployeeTermTypeId).HasColumnName("Employee_Term_Type_Id");

                entity.Property(e => e.EmployeeTermTypeActiveBoolean)
                    .IsRequired()
                    .HasColumnName("Employee_Term_Type_Active_Boolean")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.EmployeeTermTypeCode)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("Employee_Term_Type_Code");

                entity.Property(e => e.EmployeeTermTypeEnglishName)
                    .IsRequired()
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("Employee_Term_Type_English_Name");

                entity.Property(e => e.EmployeeTermTypeFrenchName)
                    .IsRequired()
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("Employee_Term_Type_French_Name");

                entity.Property(e => e.EmployeeTermTypeSortOrder).HasColumnName("Employee_Term_Type_Sort_Order");
            });

            modelBuilder.Entity<Province>(entity =>
            {
                entity.HasIndex(e => e.ProvinceCode, "AK_Province")
                    .IsUnique();

                entity.Property(e => e.ProvinceId).HasColumnName("Province_Id");

                entity.Property(e => e.ProvinceActiveBoolean)
                    .IsRequired()
                    .HasColumnName("Province_Active_Boolean")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ProvinceCode)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("Province_Code");

                entity.Property(e => e.ProvinceEnglishName)
                    .IsRequired()
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("Province_English_Name");

                entity.Property(e => e.ProvinceFrenchName)
                    .IsRequired()
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("Province_French_Name");

                entity.Property(e => e.ProvinceSortOrder).HasColumnName("Province_Sort_Order");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}