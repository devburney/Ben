<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>Titre de l'application</value>
  </data>
  <data name="ButtonAddEmployee" xml:space="preserve">
    <value>fr - Add employee</value>
  </data>
  <data name="ButtonBackToEmployeeList" xml:space="preserve">
    <value>fr - Back to employee list</value>
  </data>
  <data name="ButtonBackToEmployeeListToolTip" xml:space="preserve">
    <value>fr -Takes you back to the employee list</value>
  </data>
  <data name="ButtonDelete" xml:space="preserve">
    <value>fr - Delete</value>
  </data>
  <data name="ButtonDeleteEmployeeToolTip" xml:space="preserve">
    <value>fr - Delete employee</value>
  </data>
  <data name="ButtonEdit" xml:space="preserve">
    <value>fr - Edit</value>
  </data>
  <data name="ButtonEditEmployeeToolTip" xml:space="preserve">
    <value>fr - Edit employee</value>
  </data>
  <data name="ButtonSave" xml:space="preserve">
    <value>fr - Save</value>
  </data>
  <data name="ButtonView" xml:space="preserve">
    <value>fr - View</value>
  </data>
  <data name="ButtonViewEmployeeToolTip" xml:space="preserve">
    <value>fr - View employee</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>FR-Cancel</value>
  </data>
  <data name="Codelookup_SelectProvince" xml:space="preserve">
    <value>fr - Select a province...</value>
  </data>
  <data name="Contacts_Para1" xml:space="preserve">
    <value>fr - Your questions and comments are important to us. If you need to contact us, you can reach us by:</value>
  </data>
  <data name="Contacts_SubTitle" xml:space="preserve">
    <value>fr - General and technical enquiries</value>
  </data>
  <data name="Contacts_Title" xml:space="preserve">
    <value>fr - Contacts</value>
  </data>
  <data name="DisplayPrintView" xml:space="preserve">
    <value>FR-Display print view</value>
  </data>
  <data name="EmployeeAddPageDescription" xml:space="preserve">
    <value>fr - This is the add page to add a new employee record.</value>
  </data>
  <data name="EmployeeAddSuccessMessage" xml:space="preserve">
    <value>fr - New employee has been added successfully.</value>
  </data>
  <data name="EmployeeAddTitle" xml:space="preserve">
    <value>fr - Add employee</value>
  </data>
  <data name="EmployeeEditPageDescription" xml:space="preserve">
    <value>fr - This is the edit page for an employee record.</value>
  </data>
  <data name="EmployeeEditSuccessMessage" xml:space="preserve">
    <value>fr - Employee has been updated successfully.</value>
  </data>
  <data name="EmployeeEditTitle" xml:space="preserve">
    <value>fr - Edit employee</value>
  </data>
  <data name="EmployeeFirstName" xml:space="preserve">
    <value>fr - First name</value>
  </data>
  <data name="EmployeeJobDescription" xml:space="preserve">
    <value>fr - Job description</value>
  </data>
  <data name="EmployeeLastName" xml:space="preserve">
    <value>fr - Last name</value>
  </data>
  <data name="EmployeeListActions" xml:space="preserve">
    <value>fr - Actions</value>
  </data>
  <data name="EmployeeListPageDescription" xml:space="preserve">
    <value>fr - This is an example for viewing, adding and editing records in a table.</value>
  </data>
  <data name="EmployeeListTitle" xml:space="preserve">
    <value>fr - Employees</value>
  </data>
  <data name="EmployeeProvince" xml:space="preserve">
    <value>fr - Province</value>
  </data>
  <data name="EmployeeStartDate" xml:space="preserve">
    <value>fr - Start date</value>
  </data>
  <data name="EmployeeTermType" xml:space="preserve">
    <value>fr - Employement term</value>
  </data>
  <data name="EmployeeViewPageDescription" xml:space="preserve">
    <value>fr - This is the readonly view of the employee record.</value>
  </data>
  <data name="EmployeeViewTitle" xml:space="preserve">
    <value>fr - View employee</value>
  </data>
  <data name="GenericUntrappedErrorMessage" xml:space="preserve">
    <value>fr- An error occurred processing your request.  Please contact your system administrator.</value>
  </data>
  <data name="GenericUntrappedErrorTitle" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="Home_Index_PageTitle" xml:space="preserve">
    <value>Accueil</value>
  </data>
  <data name="Home_PageDescription" xml:space="preserve">
    <value>fr - This is the home page for your application.</value>
  </data>
  <data name="Home_Para1" xml:space="preserve">
    <value>fr - This is where we can explain what this template has to offer.  At the moment, we have a CRUD example for viewing, adding, editing and deleting employee records.</value>
  </data>
  <data name="Home_Para2" xml:space="preserve">
    <value>fr - More example features will be added over time.</value>
  </data>
  <data name="Home_SubTitle" xml:space="preserve">
    <value>fr - Template introduction</value>
  </data>
  <data name="Home_Title" xml:space="preserve">
    <value>Accueil</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Chargement</value>
    <comment>This is required for the loading spinner</comment>
  </data>
  <data name="Print" xml:space="preserve">
    <value>FR-Print</value>
  </data>
  <data name="ValidationSummary_ErrorsFound" xml:space="preserve">
    <value>parce que {0} erreurs ont été relevées.</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
  <data name="ValidationSummary_ErrorsFound_One" xml:space="preserve">
    <value>parce qu'une ({0}) erreur a été relevée.</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
  <data name="ValidationSummary_Errors_Delete" xml:space="preserve">
    <value>L’élément n'a pas pu être supprimé</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
  <data name="ValidationSummary_Errors_Header" xml:space="preserve">
    <value>Erreur</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
  <data name="ValidationSummary_Errors_List" xml:space="preserve">
    <value>Il a été impossible de télécharger le formulaire</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
  <data name="ValidationSummary_Errors_Load" xml:space="preserve">
    <value>Il a été impossible de télécharger le formulaire</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
  <data name="ValidationSummary_Errors_Save" xml:space="preserve">
    <value>L’élément n'a pas pu être enregistré</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
  <data name="ValidationSummary_Errors_Submit" xml:space="preserve">
    <value>Le formulaire n'a pas pu être soumis</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
  <data name="ValidationSummary_InfosFound" xml:space="preserve">
    <value>{0} messages ont été relevés.</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
  <data name="ValidationSummary_InfosFound_One" xml:space="preserve">
    <value>{0} message a été relevé.</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
  <data name="ValidationSummary_Infos_Header" xml:space="preserve">
    <value>Message</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
  <data name="ValidationSummary_Success" xml:space="preserve">
    <value>Succès</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
  <data name="ValidationSummary_WarningsFound" xml:space="preserve">
    <value>{0} avertissements ont été relevés.</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
  <data name="ValidationSummary_WarningsFound_One" xml:space="preserve">
    <value>{0} avertissement a été relevé.</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
  <data name="ValidationSummary_Warnings_Header" xml:space="preserve">
    <value>Avertissement</value>
    <comment>These will be in Founcation.Core.Resources</comment>
  </data>
</root>